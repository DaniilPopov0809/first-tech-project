{"version":3,"file":"static/js/296.306dfe25.chunk.js","mappings":"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","sources":["redux/selectors.js","components/UserCard/UserCards.styled.jsx","components/UserCard/UserCard.jsx","components/UserCardList/UserCardList.styled.jsx","components/UserCardList/UserCardList.jsx","components/BackLink/BackLink.styled.jsx","components/BackLink/BackLink.jsx","components/LoadMore/LoadMore.styled.jsx","components/LoadMore/LoadMore.jsx","components/ButtonToTop/ButtonToTop.styled.jsx","components/ButtonToTop/ButtonToTop.jsx","pages/Tweets/Tweets.styled.jsx","pages/Tweets/Tweets.jsx"],"sourcesContent":["export const selectUsersCard = state => state.users.users;\nexport const selectPage = state => state.users.page;\nexport const selectAllUsersCard = state => state.users.allUsers;\nexport const selectStatusLoadMoreButton = state => state.users.isVisible;\nexport const selectIsLoading = state => state.users.isLoading;","import styled from \"@emotion/styled\";\n\nexport const Card = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  width: 380px;\n  padding-top: 284px;\n  background: linear-gradient(\n    114.99deg,\n    #471ca9 -0.99%,\n    #5736a3 54.28%,\n    #4b2a99 78.99%\n  );\n  box-shadow: -2.5777px 6.87386px 20.6216px rgba(0, 0, 0, 0.23);\n  border-radius: 20px;\n`;\n\nexport const Logo = styled.img`\n  position: absolute;\n  width: 76px;\n  height: 22px;\n  left: 20px;\n  top: 20px;\n`;\n\nexport const Image = styled.img`\n  position: absolute;\n  width: 308px;\n  height: 168px;\n  left: 36px;\n  top: 28px;\n`;\n\nexport const Line = styled.div`\n  position: absolute;\n  width: 380px;\n  height: 8px;\n  left: 0px;\n  top: 214px;\n\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.06),\n    inset 0px -1.71846px 3.43693px #ae7be3, inset 0px 3.43693px 2.5777px #fbf8ff;\n`;\n\nexport const AvatarWrap = styled.div`\n  position: absolute;\n  left: 150px;\n  top: 178px;\n  z-index: 999;\n  width: 80px;\n  height: 80px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-radius: 50%;\n  background: #ebd8ff;\n  box-shadow: 0px 4.39163px 4.39163px rgba(0, 0, 0, 0.06),\n    inset 0px -2.19582px 4.39163px #ae7be3,\n    inset 0px 4.39163px 3.29372px #fbf8ff;\n`;\n\nexport const Avatar = styled.img`\n  border-radius: 50%;\n  width: 62px;\n  height: 62px;\n`;\n\nconst SharedTextStyle = styled.p`\n  text-align: center;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.2;\n  text-transform: uppercase;\n  color: #ebd8ff;\n`;\n\nexport const Tweet = styled(SharedTextStyle)`\n  margin-bottom: 16px;\n`;\n\nexport const Follower = styled(SharedTextStyle)`\n  margin-bottom: 26px;\n`;\n\nexport const BlueButton = styled.button`\n  margin-bottom: 36px;\n  padding: 14px 56px;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  border: none;\n  cursor: pointer;\n  transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    scale: 1.05;\n  }\n`;\n\nexport const GreenButton = styled(BlueButton)`\n  background-color: #5cd3a8;\n`;\n\nexport const InteractiveField = styled.div``;\n","import messageImg from \"../../images/message.png\";\nimport logo from \"../../images/_logo.png\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { enableFollow, disableFollow } from \"../../redux/operation\";\nimport PropTypes from \"prop-types\";\nimport {\n  Card,\n  Avatar,\n  Tweet,\n  Follower,\n  BlueButton,\n  GreenButton,\n  Image,\n  Line,\n  AvatarWrap,\n  Logo,\n  InteractiveField,\n} from \"./UserCards.styled\";\n\n\nconst UserCard = ({ userCard }) => {\n  const { tweets, avatar, followers, id } = userCard;\n  const dispatch = useDispatch();\n\n  const [isFollowing, setIsFollowing] = useState(\n    () => JSON.parse(localStorage.getItem(`following_${id}`)) || false\n  );\n\n  useEffect(() => {\n    localStorage.setItem(`following_${id}`, JSON.stringify(isFollowing));\n  }, [id, isFollowing]);\n\n  const handleClick = () => {\n    setIsFollowing(!isFollowing);\n    if (isFollowing === false) {\n      dispatch(enableFollow({ id, followers }));\n    }\n    if (isFollowing === true) {\n      dispatch(disableFollow({ id, followers }));\n    }\n  };\n\n  return (\n    <Card>\n      <Logo src={logo} alt=\"logo\"/>\n      <Image src={messageImg} alt=\"decoration\" />\n      <Line />\n      <AvatarWrap>\n        <Avatar src={avatar} alt=\"avatar\" />\n      </AvatarWrap>\n      <InteractiveField>\n        <Tweet>{tweets.toLocaleString(\"en-US\")} tweets</Tweet>\n        <Follower>{followers.toLocaleString(\"en-US\")} followers</Follower>\n        {isFollowing ? (\n          <GreenButton type=\"button\" onClick={handleClick}>\n            Following\n          </GreenButton>\n        ) : (\n          <BlueButton type=\"button\" onClick={handleClick}>\n            Follow\n          </BlueButton>\n        )}\n      </InteractiveField>\n    </Card>\n  );\n};\n\nexport default UserCard;\n\nUserCard.propTypes = {\n  userCard: PropTypes.exact({\n    user: PropTypes.string,\n    tweets: PropTypes.number,\n    followers: PropTypes.number,\n    avatar: PropTypes.string,\n    id: PropTypes.string,\n  }),\n};\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px;\n  margin-bottom: 30px;\n\n  @media screen and (max-width: 767px) {\n    justify-content: center;\n  }\n\n  @media screen and (max-width: 1279px) {\n    gap: 8px;\n  }\n`;\n\nexport const Item = styled.li``;\n","import { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { fetchUserCards } from \"../../redux/operation\";\nimport { selectUsersCard, selectPage } from \"../../redux/selectors\";\nimport UserCard from \"../UserCard/UserCard\";\n\nimport { List, Item } from \"./UserCardList.styled\";\n\nconst UserCardList = () => {\n  const dispatch = useDispatch();\n  const usersCard = useSelector(selectUsersCard);\n  const page = useSelector(selectPage);\n\n  useEffect(() => {\n    dispatch(fetchUserCards(page));\n  }, [dispatch, page]);\n\n  return (\n    <>\n      <List>\n        {usersCard.map((userCard) => (\n          <Item key={userCard.id}>\n            <UserCard userCard={userCard} />\n          </Item>\n        ))}\n      </List>\n    </>\n  );\n};\n\nexport default UserCardList;\n","import styled from \"@emotion/styled\"; \nimport { Link } from \"react-router-dom\";\n\n\nexport const BackLink = styled(Link)`\n  display: inline-block;\n  padding: 14px 28px;\n  margin-bottom: 30px;\n  text-decoration: none;\n  font-weight: 600;\n  font-size: 18px;\n  line-height: 22px;\n  text-transform: uppercase;\n  color: #373737;\n  background: #ebd8ff;\n  box-shadow: 0px 3.43693px 3.43693px rgba(0, 0, 0, 0.25);\n  border-radius: 10.3108px;\n  border: none;\n  cursor: pointer;\n  transition: scale 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    scale: 1.05;\n  }\n`;\n","import { BackLink } from \"./BackLink.styled\";\nimport { TiArrowLeftThick } from \"react-icons/ti\";\n\nconst BackButton = () => {\n \n  return (\n    <BackLink to='/'>\n      <TiArrowLeftThick />\n      Back\n    </BackLink>\n  );\n};\n\nexport default BackButton;\n","import styled from \"@emotion/styled\";\nimport { BlueButton } from \"../UserCard/UserCards.styled\";\n\nexport const ButtonWrap = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Button = styled(BlueButton)`\n  margin-bottom: 0;\n  display: flex;\n  align-items: center;\n`;\n","import { Oval } from \"react-loader-spinner\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { nextPage } from \"../../redux/usersCardSlice\";\nimport { ButtonWrap } from \"./LoadMore.styled\";\nimport { Button } from \"./LoadMore.styled\";\nimport { selectIsLoading } from \"../../redux/selectors\";\nconst Scroll = require(\"react-scroll\");\n\nconst LoadMore = () => {\n  const scroll = Scroll.animateScroll;\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const handleClick = () => {\n    dispatch(nextPage());\n    scroll.scrollToBottom();\n  };\n\n  return (\n    <ButtonWrap>\n      <Button type=\"button\" onClick={handleClick}>\n        Load more{\" \"}\n        {isLoading && (\n          <Oval\n            height={20}\n            width={20}\n            color=\"#5736a3\"\n            wrapperStyle={{}} \n            wrapperClass=\"\"\n            visible={true}\n            ariaLabel=\"oval-loading\"\n            secondaryColor=\"#ae7be3\"\n            strokeWidth={10}\n            strokeWidthSecondary={10}\n          />\n        )}\n      </Button>\n    </ButtonWrap>\n  );\n};\n\nexport default LoadMore;\n","import styled from '@emotion/styled';\nimport { BsFillArrowUpSquareFill } from 'react-icons/bs';\n\nexport const Button = styled.button`\n  position: fixed;\n  bottom: 40px;\n  right: 40px;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nexport const ToTop = styled(BsFillArrowUpSquareFill)`\n  color: #ebd8ff;\n  opacity: 0.75;\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    opacity: 1;\n  }\n`;\n","import { Button, ToTop } from \"./ButtonToTop.styled\";\nimport { useState, useEffect } from \"react\";\nconst Scroll = require(\"react-scroll\");\n\nconst ButtonToTop = () => {\n  const [visibleButton, setVisibleButton] = useState(false);\n  const scroll = Scroll.animateScroll;\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", onVisibleScrollButton);\n  });\n\n  const onVisibleScrollButton = () => {\n    if (window.pageYOffset > 200) {\n      setVisibleButton(true);\n    } else {\n      setVisibleButton(false);\n    }\n  };\n\n  const handleClick = () => {\n    scroll.scrollToTop();\n  };\n\n  return (\n    <>\n      {visibleButton && (\n        <Button type=\"button\" onClick={handleClick}>\n          <ToTop size={40} />\n        </Button>\n      )}\n    </>\n  );\n};\n\nexport default ButtonToTop;\n","import styled from \"@emotion/styled\";\n\nexport const PageWrap = styled.div`\n  padding: 24px 0;\n`;\n","import UserCardList from \"../../components/UserCardList/UserCardList\";\nimport BackButton from \"../../components/BackLink/BackLink\";\nimport LoadMore from \"../../components/LoadMore/LoadMore\";\nimport ButtonToTop from \"../../components/ButtonToTop/ButtonToTop\";\nimport { PageWrap } from \"./Tweets.styled\";\nimport { selectStatusLoadMoreButton } from \"../../redux/selectors\";\nimport { useSelector } from \"react-redux\";\n\nconst Tweets = () => {\n    const isVisible = useSelector(selectStatusLoadMoreButton);\n  return (\n    <PageWrap>\n      <BackButton />\n      <UserCardList />\n    {isVisible && <LoadMore/>}\n      <ButtonToTop />\n    </PageWrap>\n  );\n};\n\nexport default Tweets;\n"],"names":["selectUsersCard","state","users","selectPage","page","selectStatusLoadMoreButton","isVisible","selectIsLoading","isLoading","Card","styled","_templateObject","_taggedTemplateLiteral","Logo","_templateObject2","Image","_templateObject3","Line","_templateObject4","AvatarWrap","_templateObject5","Avatar","_templateObject6","SharedTextStyle","_templateObject7","Tweet","_templateObject8","Follower","_templateObject9","BlueButton","_templateObject10","GreenButton","_templateObject11","InteractiveField","_templateObject12","_ref","userCard","tweets","avatar","followers","id","dispatch","useDispatch","_useState","useState","JSON","parse","localStorage","getItem","concat","_useState2","_slicedToArray","isFollowing","setIsFollowing","useEffect","setItem","stringify","handleClick","enableFollow","disableFollow","_jsxs","children","_jsx","src","alt","toLocaleString","type","onClick","List","Item","usersCard","useSelector","fetchUserCards","_Fragment","map","UserCard","BackLink","Link","to","TiArrowLeftThick","ButtonWrap","Button","Scroll","require","scroll","animateScroll","nextPage","scrollToBottom","Oval","height","width","color","wrapperStyle","wrapperClass","visible","ariaLabel","secondaryColor","strokeWidth","strokeWidthSecondary","ToTop","BsFillArrowUpSquareFill","visibleButton","setVisibleButton","window","addEventListener","onVisibleScrollButton","pageYOffset","scrollToTop","size","PageWrap","BackButton","UserCardList","LoadMore","ButtonToTop"],"sourceRoot":""}